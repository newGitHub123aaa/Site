{"version":3,"file":"static/js/865.499d0b83.chunk.js","mappings":"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","sources":["component/UI/pages/contactUs/sections/contactLanding/ContactLanding.jsx","component/UI/pages/contactUs/sections/contactItems/units/ItemContact.jsx","component/UI/pages/contactUs/sections/contactItems/ContactItems.jsx","component/common/TextError.jsx","component/UI/pages/contactUs/sections/contactForm/ContactForm.jsx","component/UI/pages/contactUs/ContactUs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ContactLanding({ contactLanding, contactUsImgs }) {\r\n  return (\r\n    <section className=\"contactsLanding\">\r\n      <div className=\"container\">\r\n        <h2 className=\"landing-header\">{contactLanding.header}</h2>\r\n        <p className=\"landing-paragraph\">{contactLanding.paragraph}</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactLanding: state.dataText.dataJson.contactsPage.contactLanding,\r\n    contactUsImgs: state.allImages.pagesImgs.contactUsImgs,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactLanding);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ItemContact({ image, header, address, lang }) {\r\n  const [SectionTopOffset, setSectionTopOffset] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const SectionTop = useRef();\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      setOffset(window.pageYOffset);\r\n      setTimeout(() => {\r\n        setSectionTopOffset(SectionTop.current.offsetTop);\r\n        // console.log(SectionTop.current.offsetTop, SectionTop);\r\n        if (window.innerWidth < 768) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n        if (window.innerWidth > 768 && window.innerWidth < 992) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n        if (window.innerWidth > 992) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n      }, 0);\r\n    };\r\n    // clean up code\r\n    window.removeEventListener(\"scroll\", onScroll);\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n  return (\r\n    <div\r\n      ref={SectionTop}\r\n      className={`item-contact ${\r\n        lang === \"en\"\r\n          ? offset > SectionTopOffset\r\n            ? \"show-cards-social\"\r\n            : \"\"\r\n          : lang === \"ar\"\r\n          ? offset > SectionTopOffset\r\n            ? \"show-cards-social-ar\"\r\n            : \"\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"item-image\">\r\n        <img src={image} alt=\"\" />\r\n        {}\r\n      </div>\r\n      <div className=\"item-content\">\r\n        <h4 className=\"item-header\">{header}</h4>\r\n        <p className=\"item-contact-address\">{address}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lang: state.langDir.lang,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ItemContact);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ItemContact from \"./units/ItemContact\";\r\n\r\nfunction ContactItems({ contactItems, contactUsImgs }) {\r\n  return (\r\n    <section className=\"contact-items\">\r\n      <div className=\"container\">\r\n        {contactItems.map((el, inx) => (\r\n          <ItemContact\r\n            key={inx + el.id}\r\n            image={contactUsImgs[`contactImg${inx + 1}`]}\r\n            header={el.itemHeader}\r\n            address={el.contactAddress}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactItems: state.dataText.dataJson.contactsPage.contactItems,\r\n    contactUsImgs: state.allImages.pagesImgs.contactUsImgs\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactItems);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TextError(props) {\r\n\r\n  return <div className=\"form-error-msg\">{props.children}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lang: state.langDir.lang,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TextError);","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextError from \"./../../../../../common/TextError\";\r\n\r\nfunction ContactForm({ contactForm, errorMsg, contactUsImgs, lang }) {\r\n  const [SectionTopOffset, setSectionTopOffset] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const SectionTop = useRef();\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      setOffset(window.pageYOffset);\r\n      setTimeout(() => {\r\n        setSectionTopOffset(SectionTop.current.offsetTop);\r\n        setSectionTopOffset((pre) => pre - 500);\r\n        // console.log(SectionTop.current.offsetTop, SectionTop);\r\n        if (window.innerWidth < 768) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n        if (window.innerWidth > 768 && window.innerWidth < 992) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n        if (window.innerWidth > 992) {\r\n          // setSectionTopOffset((pre) => pre - 500);\r\n        }\r\n      }, 0);\r\n    };\r\n    // clean up code\r\n    window.removeEventListener(\"scroll\", onScroll);\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n  // Form\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(errorMsg.required),\r\n    email: Yup.string().email(errorMsg.invalid).required(errorMsg.required),\r\n    message: Yup.string().required(errorMsg.required),\r\n  });\r\n  const onSubmit = (values, submitProps) => {\r\n    console.log(values);\r\n    submitProps.setSubmitting(false);\r\n    submitProps.resetForm();\r\n  };\r\n  return (\r\n    <section className=\"contact-form\">\r\n      <div className=\"container\">\r\n        <div\r\n          ref={SectionTop}\r\n          className={`contact-form-left ${\r\n            lang === \"en\"\r\n              ? offset > SectionTopOffset\r\n                ? \"show-cards-social\"\r\n                : \"\"\r\n              : lang === \"ar\"\r\n              ? offset > SectionTopOffset\r\n                ? \"show-cards-social-ar\"\r\n                : \"\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"hand-image\">\r\n            <img src={contactUsImgs.formContactImg} alt=\"person send message\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref={SectionTop}\r\n          className={`contact-form-right ${\r\n            lang === \"en\"\r\n              ? offset > SectionTopOffset\r\n                ? \"show-cards-social-ar\"\r\n                : \"\"\r\n              : lang === \"ar\"\r\n              ? offset > SectionTopOffset\r\n                ? \"show-cards-social\"\r\n                : \"\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"form-header\">\r\n            <h3>{contactForm.fromHeader}</h3>\r\n            <p>{contactForm.fromParagraph}</p>\r\n          </div>\r\n          <div className=\"form-box\">\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {(formik) => (\r\n                <Form>\r\n                  <div className=\"form-fields\">\r\n                    <div className=\"contact-name-input\">\r\n                      <Field\r\n                        type=\"text\"\r\n                        id=\"contact-name-input\"\r\n                        name=\"name\"\r\n                        placeholder={contactForm.fromPlaceholder.name}\r\n                      />\r\n                      <ErrorMessage name=\"name\" component={TextError} />\r\n                    </div>\r\n                    <div className=\"contact-email-input\">\r\n                      <Field\r\n                        type=\"email\"\r\n                        id=\"contact-email-input\"\r\n                        name=\"email\"\r\n                        placeholder={contactForm.fromPlaceholder.email}\r\n                      />\r\n                      <ErrorMessage name=\"email\" component={TextError} />\r\n                    </div>\r\n                    <div className=\"contact-message\">\r\n                      <Field\r\n                        as=\"textarea\"\r\n                        id=\"contact-subject-input\"\r\n                        name=\"message\"\r\n                        placeholder={contactForm.fromPlaceholder.message}\r\n                      ></Field>\r\n                      <ErrorMessage name=\"message\" component={TextError} />\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"contact-form-btn\">\r\n                    <span className=\"btn-send-span\">\r\n                      {\" \"}\r\n                      {contactForm.fromBtn}\r\n                    </span>\r\n                    <span className=\"btn-icon\">\r\n                      <img src={contactUsImgs.contactIcon4} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactForm: state.dataText.dataJson.contactsPage.contactForm,\r\n    errorMsg: state.dataText.dataJson.errorMsg,\r\n    contactUsImgs: state.allImages.pagesImgs.contactUsImgs,\r\n    lang: state.langDir.lang,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport ContactLanding from \"./sections/contactLanding/ContactLanding\";\r\nimport ContactItems from \"./sections/contactItems/ContactItems\";\r\nimport ContactForm from \"./sections/contactForm/ContactForm\";\r\nimport { connect } from \"react-redux\";\r\nimport DocumentMeta from \"react-document-meta\";\r\n\r\nfunction ContactUs({ metaContactUs }) {\r\n  return (\r\n    <DocumentMeta {...metaContactUs}>\r\n      <main className=\"contact-page\">\r\n        <ContactLanding />\r\n        <ContactItems />\r\n        <ContactForm />\r\n      </main>\r\n    </DocumentMeta>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    metaContactUs: state.dataText.dataJson.contactsPage.meta,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactUs);\r\n"],"names":["connect","state","contactLanding","dataText","dataJson","contactsPage","contactUsImgs","allImages","pagesImgs","className","header","paragraph","lang","langDir","image","address","useState","SectionTopOffset","setSectionTopOffset","offset","setOffset","SectionTop","useRef","useEffect","onScroll","window","pageYOffset","setTimeout","current","offsetTop","innerWidth","removeEventListener","addEventListener","passive","ref","src","alt","contactItems","map","el","inx","itemHeader","contactAddress","id","props","children","contactForm","errorMsg","pre","validationSchema","Yup","name","required","email","invalid","message","formContactImg","fromHeader","fromParagraph","initialValues","onSubmit","values","submitProps","console","log","setSubmitting","resetForm","formik","type","placeholder","fromPlaceholder","component","TextError","as","fromBtn","contactIcon4","metaContactUs","meta"],"sourceRoot":""}